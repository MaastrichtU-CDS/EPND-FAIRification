@prefix myshape: <./shacl.ttl#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sio: <http://semanticscience.org/resource/>.

sio:SIO_000137 rdfs:label "category".
sio:SIO_000915 rdfs:label "numeric scale".
sio:SIO_000221 rdfs:label "has unit".
sio:SIO_000300 rdfs:label "has value".

myshape:PersonShape
    a sh:NodeShape ;
    sh:targetClass schema:Person;
    sh:property [
        sh:path rdf:type ;
        sh:in ( schema:nerd schema:alpha schema:Person) ;
        sh:minCount 2;
    ];
    sh:property [
        sh:path schema:givenName ;
        sh:datatype xsd:string ;
        sh:name "given name" ;
    ] ;
    sh:property [
        sh:path schema:birthDate ;
        sh:lessThan schema:deathDate ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:has_gender ;
        sh:node myshape:GenderShape ;
        sh:minCount 1;
    ] ;
    sh:property [
        sh:path schema:has_age ;
        sh:node myshape:AgeDiagnosisShape ;
        sh:minCount 1;
        sh:maxCount 1;
    ].

myshape:AgeDiagnosisShape
    a sh:NodeShape, sio:SIO_000915;
    sh:closed true;
    sh:targetClass schema:age_at_diagnosis;
    sh:property [
        sh:path rdf:type ;
        sh:hasValue schema:age_at_diagnosis;
    ];
    sh:property [
        sh:path sio:SIO_000221;
        sh:node myshape:ageUnit;
    ].
myshape:ageUnit
    a sh:NodeShape;
    sh:targetClass schema:years;
    sh:closed true;
    sh:property [
        sh:path rdf:type ;
        sh:hasValue schema:years;
        sh:minCount 1;
    ];
    sh:property [
        sh:path sio:SIO_000300;
        sh:datatype xsd:int ;
        sh:name "Age in years" ;
        sh:minCount 1;
        sh:maxCount 1;
    ].

myshape:GenderShape
    a sh:NodeShape, sio:SIO_000137;
    sh:closed true;
    sh:targetClass schema:gender;
    ## This method forces SHACL to mention that only two values are allowed (gender & male, or gender & female)
    sh:xone (
        [
            sh:property [
                sh:path rdf:type;
                sh:hasValue schema:gender;
                sh:minCount 2;
                sh:maxCount 2;
            ];
            sh:property [
                sh:path rdf:type;
                sh:hasValue schema:male;
                sh:minCount 2;
                sh:maxCount 2;
            ];
        ] [
            sh:property [
                sh:path rdf:type;
                sh:hasValue schema:gender;
                sh:minCount 2;
                sh:maxCount 2;
            ];
            sh:property [
                sh:path rdf:type;
                sh:hasValue schema:female;
                sh:minCount 2;
                sh:maxCount 2;
            ];
        ]
    );
    ## This method forces SHACL to include at minimum 2 out of 3 options for rdf:type
    sh:property [
        sh:path rdf:type ;
        sh:in ( schema:male schema:female schema:gender) ;
        sh:minCount 2;
    ].